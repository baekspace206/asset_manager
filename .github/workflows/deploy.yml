name: Build and Deploy to Raspberry Pi

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          apps/frontend/package-lock.json
          apps/backend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd apps/frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd apps/frontend
        NODE_OPTIONS="--max-old-space-size=2048" npm run build
    
    - name: Install backend dependencies
      run: |
        cd apps/backend
        npm ci
    
    - name: Build backend
      run: |
        cd apps/backend
        npm run build
    
    - name: Create deployment commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Create production branch if it doesn't exist
        git checkout -b production || git checkout production
        git merge main --no-edit
        
        # Add build files
        git add apps/frontend/build/ -f
        git add apps/backend/dist/ -f
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üöÄ Deploy: $(date '+%Y-%m-%d %H:%M:%S')"
          git push origin production --force
        fi
    
    - name: Deploy to Raspberry Pi
      if: ${{ secrets.DEPLOY_HOST }}
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        port: ${{ secrets.DEPLOY_PORT || 22 }}
        script: |
          cd /home/pi/asset_manager
          git fetch origin
          git checkout production
          git pull origin production
          ./deploy.sh
    
    - name: Deployment Summary
      run: |
        echo "‚úÖ Frontend built successfully"
        echo "‚úÖ Backend built successfully"
        echo "‚úÖ Deployment files pushed to production branch"
        if [ -n "${{ secrets.DEPLOY_HOST }}" ]; then
          echo "‚úÖ Automatically deployed to Raspberry Pi"
        else
          echo "‚ö†Ô∏è  SSH secrets not configured - manual deployment required"
          echo ""
          echo "üîß To deploy on Raspberry Pi manually, run:"
          echo "git fetch origin"
          echo "git checkout production"
          echo "git pull origin production"
          echo "./deploy.sh"
        fi